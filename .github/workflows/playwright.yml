name: Playwright Tests
on:
  schedule:
    - cron: '30 16 * * *'
  workflow_dispatch:
    inputs:
      environment:
        description: 'The environment to deploy to (e.g., staging, production)'
        required: true
        type: choice
        options:
          - Staging
          - PROD
          
permissions:
  contents: write  # Allow GitHub Actions to push to gh-pages branch
  pages: write     # Needed for GitHub Pages

jobs:
  Job_1_Schedule-Trigger-Test-Staging:
    if: github.event.schedule == '30 16 * * *'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    environment: Staging
    env:
      DEALERURL: ${{ vars.DEV_DEALERURL }}
      DEALERUSERNAME: ${{ vars.DEV_DEALERUSERNAME }}
      DEALERPASSWORD: ${{ vars.DEV_DEALERPASSWORD }}
      DEALERNAME: ${{ vars.DEV_DEALERNAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Clear NPM Cache
        run: npm cache clean --force

      - name: Check Ubuntu Version
        run: lsb_release -a

      - name: Install System Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            libasound2 \
            libnss3 \
            libxss1 \
            libatk-bridge2.0-0 \
            libgtk-3-0 \
            libgbm-dev \
            libxshmfence1

      - name: Install dependencies
        run: npm ci && npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          DealerUrl='${{ env.DEALERURL }}' \
          DealerUserName='${{ env.DEALERUSERNAME }}' \
          DealerPassWord='${{ env.DEALERPASSWORD }}' \
          DealerName='${{ env.DEALERNAME }}' \
          npx playwright test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-staging
          path: playwright-report/
          retention-days: 30

  Job_2_Manually-Trigger-Test-Staging:
    if: github.event.inputs.environment == 'Staging'
    timeout-minutes: 60
    runs-on: ubuntu-22.04
    environment: ${{ github.event.inputs.environment }}
    env:
      DEALERURL: ${{ vars.DEV_DEALERURL }}
      DEALERUSERNAME: ${{ vars.DEV_DEALERUSERNAME }}
      DEALERPASSWORD: ${{ vars.DEV_DEALERPASSWORD }}
      DEALERNAME: ${{ vars.DEV_DEALERNAME }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Clear NPM Cache
        run: npm cache clean --force
        
      - name: Check Ubuntu Version
        run: lsb_release -a

      - name: Install System Dependencies
        run: |
          sudo apt-get update && sudo apt-get install -y \
            libasound2 \
            libnss3 \
            libxss1 \
            libatk-bridge2.0-0 \
            libgtk-3-0 \
            libgbm-dev \
            libxshmfence1

      - name: Install dependencies
        run: npm ci && npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          DealerUrl='${{ env.DEALERURL }}' \
          DealerUserName='${{ env.DEALERUSERNAME }}' \
          DealerPassWord='${{ env.DEALERPASSWORD }}' \
          DealerName='${{ env.DEALERNAME }}' \
          npx playwright test

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: playwright-report-staging
          path: playwright-report/
          retention-days: 30

  Job_3_Publish-Playwright-Report:
    if: always()
    needs: 
      - Job_1_Schedule-Trigger-Test-Staging
      - Job_2_Manually-Trigger-Test-Staging

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Download Playwright Report
        uses: actions/download-artifact@v4
        with:
          name: playwright-report-staging
          path: playwright-report
          
      - name: Debug List Playwright Report Files
        run: ls -R playwright-report || echo "No files found!"
          
      - name: Deploy Playwright Report to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./playwright-report
          publish_branch: Report
